# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Comment {
  body: String!
  id: ID!
  user: UserInPost!
  userId: String!
}

input CreateCommentInput {
  body: String!
  postId: String!
  userId: String!
}

input CreateOrganizationInput {
  name: String!
}

input CreatePostInput {
  body: String!
  title: String!
  userId: String!
}

input CreateTodoInput {
  isComplete: Boolean
  task: String!
  userId: String!
}

input CreateUserInput {
  email: String!
  gender: GENDER
  name: String!
  organization: CreateOrganizationInput!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum GENDER {
  FEMALE
  MALE
}

type Mutation {
  createComment(dto: CreateCommentInput!): Comment!
  createPost(dto: CreatePostInput!): Post!
  createTodo(dto: CreateTodoInput!): TodoModel!
  createUser(createData: CreateUserInput!): User!
  updatePost(dto: UpdatePostInput!): Post!
  updateUser(updateData: UpdateUserInput!): User!
}

"""User Model"""
type Organization {
  id: ID!
  name: String!
}

type Post {
  body: String!
  id: ID!
  title: String!
  user: UserInPost!
  userId: String!
}

type PostWithComment {
  body: String
  comment: [Comment!]!
  id: ID
  title: String
  user: UserInPost
  userId: String
}

type Query {
  completeTask(id: String!): TodoModel!
  deleteTodo(id: String!): TodoModel!
  deleteUser(id: String!): User!
  findAllTodo: [TodoModel!]!
  findAllTodoById(id: String!): TodoModel!
  findAllTodoByUserId(userId: String!): [TodoModel!]!
  findAllUser: [User!]!
  findUserById(id: String!): User!
  postWithComment(postId: String!): PostWithComment!
  posts: [Post!]!
}

"""Todo Model"""
type TodoModel {
  id: ID!
  isComplete: Boolean!
  task: String!
  user: User!
  userId: String!
}

input UpdatePostInput {
  body: String!
  postId: String!
  title: String!
}

input UpdateUserInput {
  email: String!
  gender: GENDER
  id: String!
  name: String!
  organization: CreateOrganizationInput!
}

"""User Model"""
type User {
  email: String!
  gender: GENDER
  id: ID!
  isActive: Boolean!
  lastUpdated: DateTime!
  name: String!
  organization: Organization!
  organizationId: String!
  password: String!
}

"""User In Post"""
type UserInPost {
  id: ID!
  name: String!
}